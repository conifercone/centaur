[versions]
junitVersion = "5.10.1"
jmhVersion = "1.32"
springbootVersion = "3.2.1"
springCloudVersion = "2023.0.0"
springCloudAlibabaVersion = "2022.0.0.0"
jmhPluginVersion = '0.6.6'
dependencyManagementPluginVersion = "1.1.4"
graalvmNativePluginVersion = "0.9.28"
apiguardianVersion = '1.1.2'
jetbrainsAnnotationsVersion = '24.0.0'
licensePluginVersion = '0.16.2'
jacksonVersion = '2.16.0'
postgresqlVersion = '42.7.1'
jasyptVersion = '3.0.5'
lombookPluginVersion = '8.4'
protobufVersion = '0.9.4'
guavaVersion = '33.0.0-jre'
swagger3Version = '2.3.0'
p6spyVersion = '3.9.1'
springKafkaVersion = '3.1.1'
protobufJavaVersion = '3.25.1'
protocVersion = '3.25.1'
protocGenGrpcJavaVersion = '1.59.1'
grpcStubVersion = '1.59.1'
grpcProtobufVersion = '1.59.1'
annotationApiVersion = '1.3.2'
grpcSpringBootStarterApiVersion = '5.1.5'

[libraries]
# https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter
junitJupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junitVersion" }
# https://mvnrepository.com/artifact/org.openjdk.jmh/jmh-core
jmhCore = { module = "org.openjdk.jmh:jmh-core", version.ref = "jmhVersion" }
# https://mvnrepository.com/artifact/org.openjdk.jmh/jmh-generator-annprocess
jmhGeneratorAnnprocess = { module = "org.openjdk.jmh:jmh-generator-annprocess", version.ref = "jmhVersion" }
# https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter
springboot = { module = "org.springframework.boot:spring-boot-starter" }
# https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
springbootTest = { module = "org.springframework.boot:spring-boot-starter-test" }
# https://mvnrepository.com/artifact/org.apiguardian/apiguardian-api
apiguardian = { module = "org.apiguardian:apiguardian-api", version.ref = "apiguardianVersion" }
# https://mvnrepository.com/artifact/org.jetbrains/annotations
jetbrainsAnnotations = { module = "org.jetbrains:annotations", version.ref = "jetbrainsAnnotationsVersion" }
# https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-dependencies
springBootDependencies = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "springbootVersion" }
# https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
springBootStarterWeb = { module = "org.springframework.boot:spring-boot-starter-web" }
# https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
jacksonCore = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jacksonVersion" }
# https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
jacksonDatabind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jacksonVersion" }
# https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations
jacksonAnnotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jacksonVersion" }
# https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-oauth2-authorization-server
springBootOauth2AuthorizationServer = { module = "org.springframework.boot:spring-boot-starter-oauth2-authorization-server" }
# https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-oauth2-resource-server
springBootOauth2ResourceServer = { module = "org.springframework.boot:spring-boot-starter-oauth2-resource-server" }
# https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa
springBootDataJpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
# https://mvnrepository.com/artifact/org.postgresql/postgresql
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresqlVersion" }
# https://mvnrepository.com/artifact/com.github.ulisesbocchio/jasypt-spring-boot-starter
jasypt = { module = "com.github.ulisesbocchio:jasypt-spring-boot-starter", version.ref = "jasyptVersion" }
# https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools
springBootDevtools = { module = "org.springframework.boot:spring-boot-devtools" }
# https://mvnrepository.com/artifact/com.google.guava/guava
guava = { module = "com.google.guava:guava", version.ref = "guavaVersion" }
# https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-configuration-processor
springBootConfigurationProcessor = { module = "org.springframework.boot:spring-boot-configuration-processor" }
# https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-dependencies
springCloudDependencies = { module = "org.springframework.cloud:spring-cloud-dependencies", version.ref = "springCloudVersion" }
# https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-alibaba-dependencies
springCloudAlibabaDependencies = { module = "com.alibaba.cloud:spring-cloud-alibaba-dependencies", version.ref = "springCloudAlibabaVersion" }
# https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-bootstrap
springCloudBootstrap = { module = "org.springframework.cloud:spring-cloud-starter-bootstrap" }
# https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-starter-alibaba-nacos-discovery
springCloudAlibabaNacosDiscovery = { module = "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery" }
# https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-starter-alibaba-nacos-config
springCloudAlibabaNacosConfig = { module = "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config" }
# https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui
swagger3Ui = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "swagger3Version" }
# https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-actuator
springBootActuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
# https://mvnrepository.com/artifact/p6spy/p6spy
p6spy = { module = "p6spy:p6spy", version.ref = "p6spyVersion" }
# https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-elasticsearch
springBootDataElasticsearch = { module = "org.springframework.boot:spring-boot-starter-data-elasticsearch" }
# https://mvnrepository.com/artifact/org.springframework.kafka/spring-kafka
springKafka = { module = "org.springframework.kafka:spring-kafka", version.ref = "springKafkaVersion" }
# https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
protobufJava = { module = "com.google.protobuf:protobuf-java", version.ref = "protobufJavaVersion" }
# https://mvnrepository.com/artifact/com.google.protobuf/protoc
protoc = { module = "com.google.protobuf:protoc", version.ref = "protocVersion" }
# https://mvnrepository.com/artifact/io.grpc/protoc-gen-grpc-java
protocGenGrpcJava = { module = "io.grpc:protoc-gen-grpc-java", version.ref = "protocGenGrpcJavaVersion" }
# https://mvnrepository.com/artifact/io.grpc/grpc-stub
grpcStub = { module = "io.grpc:grpc-stub", version.ref = "grpcStubVersion" }
# https://mvnrepository.com/artifact/io.grpc/grpc-protobuf
grpcProtobuf = { module = "io.grpc:grpc-protobuf", version.ref = "grpcProtobufVersion" }
# https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api
annotationApi = { module = "javax.annotation:javax.annotation-api", version.ref = "annotationApiVersion" }
# https://mvnrepository.com/artifact/io.github.lognet/grpc-spring-boot-starter
grpcSpringBootStarter = { module = "io.github.lognet:grpc-spring-boot-starter", version.ref = "grpcSpringBootStarterApiVersion" }

[bundles]
jmh = ["jmhCore", "jmhGeneratorAnnprocess"]
jackson = ["jacksonCore", "jacksonDatabind", "jacksonAnnotations"]

[plugins]
springboot = { id = "org.springframework.boot", version.ref = "springbootVersion" }
jmh = { id = "me.champeau.jmh", version.ref = "jmhPluginVersion" }
dependencyManagement = { id = "io.spring.dependency-management", version.ref = "dependencyManagementPluginVersion" }
graalvmNative = { id = "org.graalvm.buildtools.native", version.ref = "graalvmNativePluginVersion" }
java = { id = "java" }
idea = { id = "idea" }
checkstyle = { id = "checkstyle" }
license = { id = "com.benjaminsproule.license", version.ref = "licensePluginVersion" }
lombok = { id = "io.freefair.lombok", version.ref = "lombookPluginVersion" }
protobuf = { id = "com.google.protobuf", version.ref = "protobufVersion" }
