[versions]
junitVersion = "5.10.1"
springbootVersion = "3.2.1"
springCloudVersion = "2023.0.0"
springCloudAlibabaVersion = "2022.0.0.0"
dependencyManagementPluginVersion = "1.1.4"
apiguardianVersion = '1.1.2'
jetbrainsAnnotationsVersion = '24.0.0'
jacksonVersion = '2.15.3'
postgresqlVersion = '42.7.1'
jasyptVersion = '3.0.5'
lombookPluginVersion = '8.4'
protobufVersion = '0.9.4'
guavaVersion = '33.0.0-jre'
swagger3Version = '2.3.0'
p6spyVersion = '3.9.1'
springKafkaVersion = '3.1.1'
protobufJavaVersion = '3.25.1'
protocVersion = '3.25.1'
protocGenGrpcJavaVersion = '1.58.0'
grpcStubVersion = '1.58.0'
grpcProtobufVersion = '1.58.0'
annotationApiVersion = '1.3.2'
grpcSpringBootStarterApiVersion = '5.1.5'
redisOmSpringVersion = "0.8.8"
commonsLang3Version = "3.14.0"
leafVersion = "1.0.2"
yitterIdGeneratorVersion = "1.0.6"
tomcatEmbedCoreVersion = "10.1.17"
jakartaValidationApiVersion = "3.0.2"
hibernateTypes60Version = "2.21.1"
curatorRecipesVersion = "5.1.0"
flywayCoreVersion = "10.9.0"

[libraries]
# https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter
junitJupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junitVersion" }
# https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter
springboot = { module = "org.springframework.boot:spring-boot-starter" }
# https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
springbootTest = { module = "org.springframework.boot:spring-boot-starter-test" }
# https://mvnrepository.com/artifact/org.apiguardian/apiguardian-api
apiguardian = { module = "org.apiguardian:apiguardian-api", version.ref = "apiguardianVersion" }
# https://mvnrepository.com/artifact/org.jetbrains/annotations
jetbrainsAnnotations = { module = "org.jetbrains:annotations", version.ref = "jetbrainsAnnotationsVersion" }
# https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-dependencies
springBootDependencies = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "springbootVersion" }
# https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
springBootStarterWeb = { module = "org.springframework.boot:spring-boot-starter-web" }
# https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
jacksonCore = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jacksonVersion" }
# https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
jacksonDatabind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jacksonVersion" }
# https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations
jacksonAnnotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jacksonVersion" }
# https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310
jacksonDatatypeJsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jacksonVersion" }
# https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-oauth2-authorization-server
springBootOauth2AuthorizationServer = { module = "org.springframework.boot:spring-boot-starter-oauth2-authorization-server" }
# https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-oauth2-resource-server
springBootOauth2ResourceServer = { module = "org.springframework.boot:spring-boot-starter-oauth2-resource-server" }
# https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa
springBootDataJpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
# https://mvnrepository.com/artifact/org.postgresql/postgresql
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresqlVersion" }
# https://mvnrepository.com/artifact/com.github.ulisesbocchio/jasypt-spring-boot-starter
jasypt = { module = "com.github.ulisesbocchio:jasypt-spring-boot-starter", version.ref = "jasyptVersion" }
# https://mvnrepository.com/artifact/com.google.guava/guava
guava = { module = "com.google.guava:guava", version.ref = "guavaVersion" }
# https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-configuration-processor
springBootConfigurationProcessor = { module = "org.springframework.boot:spring-boot-configuration-processor" }
# https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-dependencies
springCloudDependencies = { module = "org.springframework.cloud:spring-cloud-dependencies", version.ref = "springCloudVersion" }
# https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-alibaba-dependencies
springCloudAlibabaDependencies = { module = "com.alibaba.cloud:spring-cloud-alibaba-dependencies", version.ref = "springCloudAlibabaVersion" }
# https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-starter-alibaba-nacos-discovery
springCloudAlibabaNacosDiscovery = { module = "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery" }
# https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-starter-alibaba-nacos-config
springCloudAlibabaNacosConfig = { module = "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config" }
# https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui
swagger3Ui = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "swagger3Version" }
# https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-actuator
springBootActuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
# https://mvnrepository.com/artifact/p6spy/p6spy
p6spy = { module = "p6spy:p6spy", version.ref = "p6spyVersion" }
# https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-elasticsearch
springBootDataElasticsearch = { module = "org.springframework.boot:spring-boot-starter-data-elasticsearch" }
# https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-neo4j
springBootDataNeo4j = { module = "org.springframework.boot:spring-boot-starter-data-neo4j" }
# https://mvnrepository.com/artifact/org.springframework.kafka/spring-kafka
springKafka = { module = "org.springframework.kafka:spring-kafka", version.ref = "springKafkaVersion" }
# https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
protobufJava = { module = "com.google.protobuf:protobuf-java", version.ref = "protobufJavaVersion" }
# https://mvnrepository.com/artifact/com.google.protobuf/protoc
protoc = { module = "com.google.protobuf:protoc", version.ref = "protocVersion" }
# https://mvnrepository.com/artifact/io.grpc/protoc-gen-grpc-java
protocGenGrpcJava = { module = "io.grpc:protoc-gen-grpc-java", version.ref = "protocGenGrpcJavaVersion" }
# https://mvnrepository.com/artifact/io.grpc/grpc-stub
grpcStub = { module = "io.grpc:grpc-stub", version.ref = "grpcStubVersion" }
# https://mvnrepository.com/artifact/io.grpc/grpc-protobuf
grpcProtobuf = { module = "io.grpc:grpc-protobuf", version.ref = "grpcProtobufVersion" }
# https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api
annotationApi = { module = "javax.annotation:javax.annotation-api", version.ref = "annotationApiVersion" }
# https://mvnrepository.com/artifact/io.github.lognet/grpc-spring-boot-starter
grpcSpringBootStarter = { module = "io.github.lognet:grpc-spring-boot-starter", version.ref = "grpcSpringBootStarterApiVersion" }
# https://mvnrepository.com/artifact/com.redis.om/redis-om-spring
redisOmSpring = { module = "com.redis.om:redis-om-spring", version.ref = "redisOmSpringVersion" }
# https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
commonsLang3 = { module = "org.apache.commons:commons-lang3", version.ref = "commonsLang3Version" }
# https://mvnrepository.com/artifact/com.github.guang19/leaf-spring-boot-starter
leaf = { module = "com.github.guang19:leaf-spring-boot-starter", version.ref = "leafVersion" }
# https://mvnrepository.com/artifact/com.github.yitter/yitter-idgenerator
yitterIdGenerator = { module = "com.github.yitter:yitter-idgenerator", version.ref = "yitterIdGeneratorVersion" }
# https://mvnrepository.com/artifact/io.micrometer/micrometer-tracing
micrometerTracing = { module = "io.micrometer:micrometer-tracing" }
# https://mvnrepository.com/artifact/io.micrometer/micrometer-registry-prometheus
micrometerRegistryPrometheus = { module = "io.micrometer:micrometer-registry-prometheus" }
# https://mvnrepository.com/artifact/io.micrometer/micrometer-tracing-bridge-otel
micrometerTracingBridgeOtel = { module = "io.micrometer:micrometer-tracing-bridge-otel" }
# https://mvnrepository.com/artifact/io.opentelemetry/opentelemetry-exporter-zipkin
opentelemetryExporterZipkin = { module = "io.opentelemetry:opentelemetry-exporter-zipkin" }
# https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-aop
springBootStarterAop = { module = "org.springframework.boot:spring-boot-starter-aop" }
# https://mvnrepository.com/artifact/org.apache.tomcat.embed/tomcat-embed-core
tomcatEmbedCore = { module = "org.apache.tomcat.embed:tomcat-embed-core", version.ref = "tomcatEmbedCoreVersion" }
# https://mvnrepository.com/artifact/jakarta.validation/jakarta.validation-api
jakartaValidationApi = { module = "jakarta.validation:jakarta.validation-api", version.ref = "jakartaValidationApiVersion" }
# https://mvnrepository.com/artifact/com.vladmihalcea/hibernate-types-60
hibernateTypes60 = { module = "com.vladmihalcea:hibernate-types-60", version.ref = "hibernateTypes60Version" }
# https://mvnrepository.com/artifact/org.springframework.security/spring-security-core
springSecurityCore = { module = "org.springframework.security:spring-security-core" }
# https://mvnrepository.com/artifact/org.springframework.security/spring-security-oauth2-jose
springSecurityOauth2Jose = { module = "org.springframework.security:spring-security-oauth2-jose" }
# https://mvnrepository.com/artifact/org.springframework.data/spring-data-commons
springDataCommons = { module = "org.springframework.data:spring-data-commons" }
# https://mvnrepository.com/artifact/org.springframework.security/spring-security-test
springSecurityTest = { module = "org.springframework.security:spring-security-test" }
# https://mvnrepository.com/artifact/org.apache.curator/curator-recipes
curatorRecipes = { module = "org.apache.curator:curator-recipes", version.ref = "curatorRecipesVersion" }
# https://mvnrepository.com/artifact/org.flywaydb/flyway-core
flywayCore = { module = "org.flywaydb:flyway-core", version.ref = "flywayCoreVersion" }
flywayDatabasePostgresql = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flywayCoreVersion" }

[bundles]
jackson = ["jacksonCore", "jacksonDatabind", "jacksonAnnotations", "jacksonDatatypeJsr310"]
micrometer = ["micrometerTracing", "micrometerRegistryPrometheus", "micrometerTracingBridgeOtel", "opentelemetryExporterZipkin", "springBootStarterAop", "springBootActuator", "springBootStarterWeb"]

[plugins]
springboot = { id = "org.springframework.boot", version.ref = "springbootVersion" }
dependencyManagement = { id = "io.spring.dependency-management", version.ref = "dependencyManagementPluginVersion" }
java = { id = "java" }
javaLibrary = { id = "java-library" }
idea = { id = "idea" }
checkstyle = { id = "checkstyle" }
lombok = { id = "io.freefair.lombok", version.ref = "lombookPluginVersion" }
protobuf = { id = "com.google.protobuf", version.ref = "protobufVersion" }
